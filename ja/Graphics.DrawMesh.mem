<signature>
DrawMesh(Mesh,Vector3,Quaternion,Material,int)
DrawMesh(Mesh,Vector3,Quaternion,Material,int,Camera,int,MaterialPropertyBlock)
DrawMesh(Mesh,Vector3,Quaternion,Material,int,Camera)
DrawMesh(Mesh,Vector3,Quaternion,Material,int,Camera,int)
DrawMesh(Mesh,Matrix4x4,Material,int)
DrawMesh(Mesh,Matrix4x4,Material,int,Camera)
DrawMesh(Mesh,Matrix4x4,Material,int,Camera,int)
DrawMesh(Mesh,Matrix4x4,Material,int,Camera,int,MaterialPropertyBlock)
</signature>
メッシュを描画する
DrawMesh によりメッシュを 1 フレームだけ描画します。メッシュはライティングによりシャドウを投影する/されることが出来て、他のゲームオブジェクト同様にプロジェクトの影響を受けます。全てのカメラで描画するか、ひとつのカメラのみで描画するか選択できます。

DrawMesh を使用する場面は、メッシュを大量に描画したいがゲームオブジェクト作成および管理のオーバヘッドを避けたい場合です。
DrawMesh はメッシュを直ぐに描画しないことに留意して下さい。レンダリングできるように "提出" するのみです。メッシュは
通常のレンダリングプロセスの一環でレンダリングされます。もしメッシュを直ちに描画いたい場合は Graphics.DrawMeshNow を使用して下さい。

DrawMesh はメッシュを直ちに描画しないため、この関数呼び出しの間に発生するマテリアル プロパティの修正はメッシュに反映されません。もし同じマテリアルの複数メッシュをわずかに変えたプロパティで描画したい場合（例．メッシュ毎に色を変えたい場合）は、 [[MaterialPropertyBlock]] を使用して下さい。

SA: [[MaterialPropertyBlock]].
CONVERTEXAMPLE
BEGIN EX
	// (0,0,0) にメッシュをマテリアル付き、回転なしで 1 フレーム描画


	var aMesh : Mesh;
	var aMaterial : Material;

	function Update() {
		Graphics.DrawMesh(aMesh, Vector3.zero, Quaternion.identity, aMaterial, 0);
	}
END EX
@param mesh 描画するメッシュ( [[Mesh]] )
@param position メッシュの位置
@param rotation メッシュの角度
@param matrix メッシュの変換行列
@param material 使用する [[Material]] オブジェクトを設定
@param layer [[wiki:Layers|レイヤー]] を設定
@param camera 特定のカメラで描画する場合のみ、設定。デフォルトは /null/で、すべてのカメラで描画される。
@param submeshIndex 描画するメッシュのサブセット。複数マテリアルの場合のみ適用される
@param properties マテリアルのプロパティ。メッシュが描画される直前にマテリアルに適用される。 [[MaterialPropertyBlock]] を参照して下さい。
<signature>
DrawMesh(Mesh,Vector3,Quaternion,Material,int,Camera,int,MaterialPropertyBlock,bool,bool)
</signature>
<txttag>
UNDOC
</txttag>
<signature>
DrawMesh(Mesh,Matrix4x4,Material,int,Camera,int,MaterialPropertyBlock,bool,bool)
</signature>
<txttag>
UNDOC
</txttag>