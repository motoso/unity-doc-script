<signature>
FindGameObjectsWithTag(string)
</signature>
タグのついた有効なゲームオブジェクトがあるか検索して、全て取得する
該当するものがない場合は、null を返します。
タグは使用する前に Tag Manager 上で宣言しておく必要があります。
指定したタグが、既存のタグにない、空文字、 null のいずれかである場合 @@UnityException@@ の例外がスローされます。
CONVERTEXAMPLE
BEGIN EX
	// "Respawn"（再作成）とタグされた全てのゲームオブジェクトの位置に
	// respawnPrefab をインスタンス化

	var respawnPrefab : GameObject;
	var respawns;
	function Start()
	{
		if (respawns == null)
			respawns = GameObject.FindGameObjectsWithTag ("Respawn");
		for (var respawn in respawns)
			Instantiate (respawnPrefab, respawn.transform.position, respawn.transform.rotation);
	}
END EX
Another example:
CONVERTEXAMPLE
BEGIN EX
	// 最も近い敵の名前を表示
	print(FindClosestEnemy().name); 
	
	// 最も近い敵の名前を探す
	function FindClosestEnemy () : GameObject {
		// Enemy タグの付いた全てのゲームオブジェクトを探す
		var gos : GameObject[];
		gos = GameObject.FindGameObjectsWithTag("Enemy"); 
		var closest : GameObject; 
		var distance = Mathf.Infinity; 
		var position = transform.position; 
		// 反復により最も近いものを探す
		for (var go : GameObject in gos)  { 
			var diff = (go.transform.position - position);
			var curDistance = diff.sqrMagnitude; 
			if (curDistance < distance) { 
				closest = go; 
				distance = curDistance; 
			} 
		} 
		return closest;	
	}
END EX
別のサンプルとして、タグが未使用の場合のテスト
BEGIN EX
    // タグの付いたゲームオブジェクトが未使用の場合

    function Start () {
        var gos : GameObject[];
        gos = GameObject.FindGameObjectsWithTag("fred"); 
  
        if (gos.length == 0) {
            Debug.Log("fred とタグの付いたゲームオブジェクトはありません");
        }
}
END EX
@param tag どのタグ名の付いた @@GameObject@@ を検索するか
