<signature>
Start()
Start(float)
Start(float,float)
</signature>
ロケーションの更新を開始する。最後のロケーション座標は @@Input.location.lastData@@ により取得できる
サービス開始時にロケーションデータは直ちに送信されません。現在のサービスステータスを確認するには
コード中で @@Input.location.status@@ をチェックして下さい。
desiredAccuracyInMeters - サービスの精度をメートル単位で指定。500 メートルなど
より高い値にセっていすることで GPS チップをオンにしておく必要がなくなるため
バッテリー容量を節約します。5-10 メートルの値にすることでより精度が得られます。
デフォルトは 10 メートル。
updateDistanceInMeters -  @@Input.location@@ プロパティが更新されるための最小距離として
どれだけ横方向に移動する必要があるかをメートル単位で指定します。500 メートルなど
より高い値にすることでオーバーヘッドが少なくなります。デフォルトは 10 メートル。

CONVERTEXAMPLE
BEGIN EX
function Start () {
        // 最初にユーザがロケーションサービスを有効化にしているかチェック
        if (!Input.location.isEnabledByUser)
            return;
        // ロケーションの照会前にサービス開始
        Input.location.Start ();
        // サービスの初期化を待機
        var maxWait : int = 20;
        while (Input.location.status
               == LocationServiceStatus.Initializing && maxWait > 0) {
            yield WaitForSeconds (1);
            maxWait--;
        }
        // 20 秒で初期化が完了しない場合
        if (maxWait < 1) {
            print ("タイムアウト");
            return;
        }
        // 接続が失敗
        if (Input.location.status == LocationServiceStatus.Failed) {
            print ("デバイスのロケーションが特定できません");
            return;
        }
        // アクセスが許可され、ロケーションの値を取得できた場合
        else {
            print ("ロケーション: " + Input.location.lastData.latitude + " " +
                   Input.location.lastData.longitude + " " +
                   Input.location.lastData.altitude + " " +
                   Input.location.lastData.horizontalAccuracy + " " +
                   Input.location.lastData.timestamp);
        }
        // 継続的なロケーションの照会が不要であればサービス停止
        Input.location.Stop ();
    }
END EX
