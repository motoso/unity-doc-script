<signature>
Find(string)
</signature>
指定したゲームオブジェクト名を持つオブジェクトを検索して 1 つだけ取得する
もし /name/ が一致するゲームオブジェクトが見つからない場合、null を返します。
もし /name/ に "/" 文字が含まれるとパス名と同様に扱い階層を辿ります。
この関数はアクティブなゲームオブジェクトのみ返します。

パフォーマンス上の理由により毎フレームこの関数を呼ぶことは推奨しません。
その代わり起動時にメンバー変数に結果をキャッシュするか、 GameObject.FindWithTag を使用します。
CONVERTEXAMPLE
BEGIN EX
	var hand : GameObject;
	// シーン上の Hand という名前のゲームオブジェクトを返す
	hand = GameObject.Find("Hand");

	// Hand という名前のゲームオブジェクトを返す
	// 階層ビュー上で Hand の親オブジェクトが存在してはいけない
	hand = GameObject.Find("/Hand");

	// Hand という名前のゲームオブジェクトを返す。
	// このゲームオブジェクトは子オブジェクトであり /Monster/Arm の階層にある
	// Monster の親オブジェクトが存在してはいけない
	hand = GameObject.Find("/Monster/Arm/Hand");

	// This will return the game object named Hand,
	// このゲームオブジェクトは子オブジェクトであり /Monster/Arm の階層にある
	// Monster の親オブジェクトが存在しても良い
	
	hand = GameObject.Find("Monster/Arm/Hand");
END EX
ロード時、例えば MonoBehaviour.Awake または MonoBehaviour.Start の時に他のオブジェクトに対する参照を自動でつけたい場合に、この関数はもっとも役に立ちます。
パフォーマンス上の理由により毎フレームこの関数（例えば MonoBehaviour.Update）を呼ぶことは推奨しません。
MonoBehaviour.Start の中で変数にゲームオブジェクトに割り当てるのが主な使い方です。その後、 MonoBehaviour.Update で変数を使用します。
CONVERTEXAMPLE
BEGIN EX
	// Start の中で Hand を見つけ、毎フレーム回転させる
	private var hand : GameObject;
	function Start () {
		hand = GameObject.Find("/Monster/Arm/Hand");
	}
	
	function Update () {
		hand.transform.Rotate(0, 100 * Time.deltaTime, 0);
	}
END EX
