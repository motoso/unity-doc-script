<signature>
BuildStreamedSceneAssetBundle(string[],string,BuildTarget)
BuildStreamedSceneAssetBundle(string[],string,BuildTarget,uint)
BuildStreamedSceneAssetBundle(string[],string,BuildTarget,BuildOptions)
BuildStreamedSceneAssetBundle(string[],string,BuildTarget,uint,BuildOptions)
</signature>
シーンをWWWクラスでロードして使用するためにアセットバンドルとして作成します（Unity Pro のみ）
シーンのアセットバンドルは任意のターゲットプラットフォームで使用でき、常にひとつの圧縮 unity3d ファイルを生成します。

この際にロードしたシーンを呼び出すにはWWW.assetBundleを一度呼び出す必要があります。
またWWW.LoadFromCacheOrDownloadを利用してキャッシュとして残すことが出来ます。任意の  /crc/ 出力パラメータをしようして生成されたアセットバンドルの CRC チェックサムを取得出来ます。これは WWW.LoadFromCacheOrDownload によるダウンロードしたコンテンツのチェックに使用できます。

BEGIN EX
	// ストリーミング unity3d ファイルをビルド。これにはオンデマンドでダウンロードできる
	// シーンがひとつ含まれ、アセットバンドルがロードされた後に、シーンがロードできます。

	@MenuItem ("Build/BuildWebplayerStreamed")
	static function MyBuild(){
		var levels : String[] = ["Assets/Level1.unity"];
		BuildPipeline.BuildStreamedSceneAssetBundle( levels, "Streamed-Level1.unity3d", BuildTarget.WebPlayer); 
	}
END EX
ビルドされた圧縮ファイルをダウンロードするとき、 Application.LoadLevel() および Application.LoadLevelAdditive() 関数でシーンを利用可能とするには WWW.assetBundle を呼び出しする必要があります。
BEGIN EX
	function Start () {
		// もし "Streamed-Level1.unity3d" と名前の付いたファイルのバージョン 5 がすでにダウンロードされてキャッシュされた場合、圧縮シーンをダウンロード。
		// 次に Unity はダウンロードを完全にスキップして展開されたシーンをディスクから直接ロードします。
		var download = WWW.LoadFromCacheOrDownload ("http://myWebSite.com/Streamed-Level1.unity3d", 5);
		yield download;
		
		// エラーのハンドリング
		if (download.error != null)
		{
			Debug.LogError(download.error);
			return;
		}
		
		// LoadLevel からシーンを利用可能とするため、アセットバンドルをロードする必要があります。
		// AssetBundle クラスにより、不要になったときに全てのアセットおよびファイルストレージを強制的にアンロード出来ます。
		var bundle = download.assetBundle;
		
		// ダウンロードしたばかりのレベルをロードします
		Application.LoadLevel ("Level1");
	}
END EX
@param levels シーンアセットパスの配列
@param locationPath AssetBundleの保存先
@param target ビルドターゲット
@param crc 生成されたアセットバンドルの CRC チェックサムを受け取るための出力パラメータ
@param options ビルドオプション。選択できる値の一覧については  /BuildOptions/  を参照して下さい。
@return 何らかのエラーが出た場合、戻り値としてエラー文字を返します。成功したときは空文字になります
