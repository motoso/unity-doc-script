<signature>
BuildAssetBundle(Object,Object[],string)
BuildAssetBundle(Object,Object[],string,uint,BuildAssetBundleOptions)
BuildAssetBundle(Object,Object[],string,BuildAssetBundleOptions)
BuildAssetBundle(Object,Object[],string,uint)
BuildAssetBundle(Object,Object[],string,BuildAssetBundleOptions,BuildTarget)
BuildAssetBundle(Object,Object[],string,uint,BuildAssetBundleOptions,BuildTarget)
</signature>
アセットバンドルを作成します __(Unity Pro のみ)__.
/assets/ のコレクションを含む圧縮した unity3d ファイルを作成します。アセットバンドルはプロジェクトフォルダにある任意のアセットを含めることが出来ます。

アセットバンドル化できるのは、任意の型のリソースデータ、フルセットアップされたプレハブ、テクスチャ、メッシュ、アニメーション、およびプロジェクトウィンドウで表示される任意の型のアセットであり、これらをストリーミングすることが出来ます。

/mainAsset/ により AssetBundle.mainAsset を使用して簡便に取得したいオブジェクトを指定できます。

圧縮されたアセットバンドル ファイルは /pathName/ に保存されます。
/options/ により自動的に依存関係を含めたり、ただ参照されたオブジェクトのみだけでなく常に完全なアセットを含めることが出来ます。

全てのパスはプロジェクトフォルダに対する相対パス指定になります： "Assets/MyTextures/hello.png"。オプションである /crc/ 出力引数により生成されたアセットバンドルに対して CRC チェックサムを取得できます。これは WWW.LoadFromCacheOrDownload を使用してアセットバンドルをダウンロードするときにコンテンツを確認できます。

スタンドアローンまたはウェブプレイヤー向けのターゲットでビルドされたアセットバンドルはモバイルプラットフォーム向けにビルドされたアプリケーションではロード出来ませんし、その逆もまた然りです。さらにアセットバンドルは iOS と Android プラットフォームで互換性がありません。

関数の戻り値は boolean 型であり、ビルドが成功した場合は true、そうでなければ false です。

SA: [[AssetBundle]] クラス, WWW.assetBundle
BEGIN EX
	// C# の例
	// プロジェクト ウィンドウの選択されたオブジェクトからアセットバンドルを作成
	// コンパイルした後は "Menu" -> "Assets" へ移動して選択肢から一つを選択して
	// アセットバンドルをビルド
	
	using UnityEngine;
	using UnityEditor;

	public class ExportAssetBundles {
		[MenuItem("Assets/Build AssetBundle From Selection - Track dependencies")]
		static void ExportResource () {
			// 保存ウィンドウのパネルを表示
			string path = EditorUtility.SaveFilePanel ("Save Resource", "", "New Resource", "unity3d");
			if (path.Length != 0) {
				// アクティブなセレクションに対してリソースファイルをビルド
				Object[] selection = Selection.GetFiltered(typeof(Object), SelectionMode.DeepAssets);
				BuildPipeline.BuildAssetBundle(Selection.activeObject, selection, path, 
                                  BuildAssetBundleOptions.CollectDependencies | BuildAssetBundleOptions.CompleteAssets);
				Selection.objects = selection;
			}
		}
		[MenuItem("Assets/Build AssetBundle From Selection - No dependency tracking")]
		static void ExportResourceNoTrack () {
			// 保存ウィンドウのパネルを表示
			string path = EditorUtility.SaveFilePanel ("Save Resource", "", "New Resource", "unity3d");
			if (path.Length != 0) {
				// アクティブなセレクションに対してリソースファイルをビルド
				BuildPipeline.BuildAssetBundle(Selection.activeObject, Selection.objects, path);
			}
		}
	}
END EX
