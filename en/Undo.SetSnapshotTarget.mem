<signature>
SetSnapshotTarget(Object,string)
SetSnapshotTarget(Object[],string)
</signature>
Snapshotを行うオブジェクトを設定します
この関数だけではUndoとして保存はされていません
Undo. CreateSnapshotを呼び出すことで保存されるようになります

これは、オブジェクト操作途中にキャンセル処理が入った場合を想定して使用されるものです
キャンセル処理が入った場合、Undoに保存はするべきではありません
キャンセル処理がされず、オブジェクト操作が終了した時点で初めてUndoとして保存されるべきです
これを実現するためにこの関数が使用されます
BEGIN EX
	// Editor Script Side
	// Create a position Handle and make the target always look at the position handle.
	// This is an editor Script, this should go inside the Editor Folder.

	@CustomEditor (LookAtPoint)
	class SnapshotTargetEx extends Editor {

		function OnSceneGUI () {
			Undo.SetSnapshotTarget(target, "Moved Object Around");
	        target.lookAtPoint =
			Handles.PositionHandle(target.lookAtPoint, Quaternion.identity);
	        if (GUI.changed)
	            EditorUtility.SetDirty (target);

	        if(Input.GetMouseButtonDown(0)) {
	        	// Register the undos when we press the Mouse button.
	        	Undo.CreateSnapshot();
	        	Undo.RegisterSnapshot();
	        }
	    }
	}
END EX
And the runtime script that works with this editor Script.
BEGIN EX
	// LookAtPoint.js

	@script ExecuteInEditMode()

	var lookAtPoint = Vector3.zero;

	function Update () {
	    transform.LookAt (lookAtPoint);
	}
END EX
@param objectToUndo Undoを行うオブジェクト
@param name Undo処理の名前
