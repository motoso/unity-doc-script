<signature>
Instantiate(Object,Vector3,Quaternion)
Instantiate(Object)
</signature>
/original/ のオブジェクトをクローンしたうえで返り値とします
この関数はオブジェクトをエディタ上の Duplicate コマンドと同様の方法で複製します。もし[[GameObject]] をクローンする場合、さらにその位置および回転を任意で指定できます（各々 Vector3::ref::zero および Quaternion::ref::identity がデフォルト値）。もし [[Component]] をクローンする場合、アタッチされているゲームオブジェクトも位置および回転を任意で指定したうえでクローンされます。

[[GameObject]] または [[Component]] をクローンするとき、全ての子オブジェクトおよびコンポーネントは元のオブジェクトと同様のプロパティの値でさらにクローンします。しかし新規オブジェクトの ''parent'' は null となるため、元のオブジェクトの "子" とはなりません。しかし、必要であれば明示的に親を指定することは可能です。さらにクローンするときのゲームオブジェクトの有効状態は次に渡されるため、もし元が無効だった場合、クローンもまた無効状態となります。

SA: [[wiki:Instantiating Prefabs|詳細なプレハブ インスタンス化の説明]]
CONVERTEXAMPLE
BEGIN EX
	// 互いに 2 ユニット離してプレハブを 10 個複製してインスタンス化

	var prefab : Transform;

	for (var i : int = 0;i < 10; i++) {
		Instantiate (prefab, Vector3(i * 2.0, 0, 0), Quaternion.identity);
	}
END EX
Instantiate は発射物、AI 付き敵キャラクター、爆発のパーティクル、または破壊されたオブジェクトの Replacement のインスタンス化の場合にもっとも使用されます。
CONVERTEXAMPLE
BEGIN EX
	// Rigidbody をインスタンス化して速度をセット

	var projectile : Rigidbody;

	function Update () {
		// ボタンが押されたら発射
		if (Input.GetButtonDown("Fire1")) {
			// 発射物を次の Trasnform の位置、回転でインスタンス化
			var clone : Rigidbody;
			clone = Instantiate(projectile, transform.position, transform.rotation);
			
			// クローンされたオブジェクトに現在のオブジェクトの Z 軸に沿った
			// 初期速度を与える
			clone.velocity = transform.TransformDirection (Vector3.forward * 10);
		}
	}
END EX
Instantiate によりスクリプトのインスタンスを直接クローンすることもできます。
ゲームオブジェクト全体の階層がクローンされ、クローンされたスクリプトのインスタンスが返されます。
CONVERTEXAMPLE
BEGIN EX
	// Missile スクリプトがアタッチされたプレハブをインスタンス化
	var projectile : Missile;

	function Update () {
		// ボタンが押されたら発射
		if (Input.GetButtonDown("Fire1")) {
			// 発射物を次の Trasnform の位置、回転でインスタンス化
			var clone : Missile;
			clone = Instantiate(projectile, transform.position, transform.rotation);
			
			// ミサイルを破壊するまえでの時間を 5 秒にセット
			clone.timeoutDestructor = 5;
		}
	}
END EX
オブジェクトをクローンした後。さらに GetComponent を使用して、クローンされたオブジェクトの特定コンポーネントのプロパティをセット出来ます。
@param original 複製したい既存オブジェクト
@param position 新規オブジェクトの位置
@param rotation 新規オブジェクトの回転
<signature>
</signature>
<txttag>
UNDOC
</txttag>
/original/ のオブジェクトをクローンしたうえで返り値とします
この関数はクローンされたオブジェクトの位置および回転を保存します。
これは Unity で Cmd + D による複製コマンドと同等です。
[[GameObject]] または [[Component]] をクローンするとき、ゲームオブジェクト全体および全てのコンポーネントをクローンします。
もしゲームオブジェクトに Transform がある場合、全ての子もまたクローンされます。さらにクローンするときのゲームオブジェクトの有効状態は次に渡されるため、もし元が無効だった場合、クローンもまた無効状態となることに留意して下さい。
要するに Unity の複製コマンド (Cmd + d) と同じです。


SA: [[wiki:Instantiating Prefabs|詳細なプレハブ インスタンス化の説明]]
CONVERTEXAMPLE
BEGIN EX
	// 任意の Rigidbody がトリガーに入ったときプレハブをインスタンス化
	// プレハブの元の位置および回転を保持します

	var prefab : Transform;

	function OnTriggerEnter () {
		Instantiate (prefab);
	}
END EX
Instantiate によりスクリプトを含む任意の型のオブジェクトをクローンできることに留意して下さい。
@param original 複製したい既存のオブジェクト
<signature>
Instantiate<T>(T)
</signature>
ジェネリックにした関数。詳細については [[wiki:Generic Functions|ジェネリック関数]] を参照して下さい。
